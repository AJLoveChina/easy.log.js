!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.LOG=e():t.LOG=e()}(window,function(){return function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e){function n(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var o={},r=[],i=1e3,u=1,c=!0,a=!0;function f(t){return function(){return o[t]}}function l(t,e){var a=[],l="log-".concat(t[0],"-").concat(u);return a.push.apply(a,n(t)),a.push({fn:f(l)}),(!0===e||c&&void 0===e)&&function(t,e){if(r.push(t),o[t]=e,r.length>i){var n=r.shift();delete o[n]}}(l,new Error("stack").stack),u++,a}var s=function t(e){if(this instanceof t){this._isSaveStack=void 0,this._isEnableLog=void 0;var o=this,r=function(){var t;(!0===o._isEnableLog||a&&void 0===o._isEnableLog)&&(t=console).log.apply(t,[e].concat(n(l(arguments,o._isSaveStack))))};return["log","info","warn","error"].forEach(function(t){r[t]=function(){var r;(!0===o._isEnableLog||a&&void 0===o._isEnableLog)&&(r=console)[t].apply(r,[e].concat(n(l(arguments,o._isSaveStack))))}}),r.toggleLog=function(t){o._isEnableLog=!!t},r.toggleStack=function(t){o._isSaveStack=!!t},r}return new t(e)};s.toggleLog=function(t){a=!!t},s.toggleStack=function(t){c=!!t},t.exports=s}])});
//# sourceMappingURL=easy.log.js.map